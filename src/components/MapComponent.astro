---
import "leaflet/dist/leaflet.css";
import type { FeatureCollection, Geometry, GeoJsonProperties } from "geojson";

export interface Props {
  latitude: number;
  longitude: number;
  zoom: number;
  tileLayer: string; // URL del tileLayer (ejemplo: OpenStreetMap, Mapbox, etc.)
  attribution: string; // Atribución requerida por el tile server
  geoJSON?: { data: FeatureCollection<Geometry, GeoJsonProperties>; color: string }[];
}

const { latitude, longitude, zoom, tileLayer, attribution, geoJSON } = Astro.props;
---

<leaflet-map
  class="block h-full rounded-lg shadow-lg"
  data-latitude={latitude}
  data-longitude={longitude}
  data-zoom={zoom}
  data-tiles={tileLayer}
  data-attribution={attribution}
  data-geojson={JSON.stringify(geoJSON)}
></leaflet-map>

<script>
  import L from "leaflet";
  import type { FeatureCollection, Geometry, GeoJsonProperties } from "geojson";

  class LeafletMap extends HTMLElement {
    connectedCallback() {
      const { latitude, longitude, zoom, tiles, attribution, geojson } = this.dataset;
      if (!tiles) {
        return;
      }
      const latlng: L.LatLngTuple = [Number(latitude), Number(longitude)];

      // Inicializa el mapa con controles activos
      const map = L.map(this, {
        zoomControl: false,
        scrollWheelZoom: false,
        dragging: true,
        attributionControl: false,
      }).setView(latlng, Number(zoom));

      L.tileLayer(tiles, { attribution }).addTo(map);

      L.marker(latlng).addTo(map).openPopup();

      // Carga geoJSON si está disponible
      if (geojson) {
        const geoJSONData = JSON.parse(geojson);
        geoJSONData.forEach(({ data, color }: { data: FeatureCollection<Geometry, GeoJsonProperties>; color: string }) => {
          L.geoJSON(data, {
            style: { color, weight: 3, opacity: 0.75 },
          }).addTo(map);
        });
      }
    }
  }

  window.customElements.define("leaflet-map", LeafletMap);
</script>

<style is:global>
  .leaflet-container {
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  .leaflet-control-zoom {
    border-radius: 50%;
  }
  .leaflet-popup-content-wrapper {
    border-radius: 8px;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.15);
  }
</style>